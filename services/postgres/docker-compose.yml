# Container running the PostgreSQL
# Note: The volumes at this container are refered at the root folder of the project.
# Befor running this service run the command at the root folder:
# openssl rand -base64 20 > docker-data/postgres/db_root_password.txt
# Run the service at the root folder using the -f flag. 
# Ex: docker compose -f services/postgres/docker-compose.yml --env-file services/postgres/.env.postgres up -d
#
# Default host port is 5432 and can be changed with the env variables.
# This service runs with Adminer for easy management of the database.
# The Adminer default address is http://127.0.0.1:9000 if used standalone
# or
# Via proxy http://dbadmin.localhost:8000 
#
x-postgres-traefik: &labels-traefik-postgres
  labels:
    - "traefik.enable=true"
    - "traefik.tcp.routers.postgres.entrypoints=postgres"
    - "traefik.tcp.services.postgres.loadbalancer.server.port=${POSTGRES_PORT:-5432}"
services:
  db:
    image: ${POSTGRES_IMAGE:-postgres}:${POSTGRES_VERSION:-alpine}
    container_name: ${POSTGRES_CONTAINER_NAME:-app_postgres}
    command: -c config_file=/etc/postgresql.conf
    restart: always
    healthcheck:
      #test: ["CMD-SHELL", "pg_isready -U $${APP_POSTGRES_USER}"]
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      #POSTGRES_PASSWORD_FILE: /run/secrets/db_root_password # openssl rand -base64 20 | sudo docker secret create db_root_password -
      POSTGRES_DB: ${APP_DATABASE_NAME:-app}
      POSTGRES_USER: ${APP_POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD:-secret}
      TZ: ${APP_TIMEZONE:-America/Sao_Paulo}
    secrets:
      - db_root_password
    ports:
      - ${POSTGRES_PORT:-5432}:5432
    expose:
      - 5432
    volumes:
      - ${POSTGRESDATA_PATH:-/tmp/postgres}:/var/lib/postgresql/data
      - $PWD/services/postgres/conf/postgresql.conf:/etc/postgresql.conf
      #- $PWD/docker-data/postgres/logs:/tmp/logs   # TODO: Expose the logs(First attempt run in permission issues)
    networks:
      - ${APP_NETWORK_NAME:-app_network}
  dbadmin:
    extends:
      file: $PWD/services/adminer/docker-compose.yml
      service: dbadmin
    depends_on:
      - db
secrets:
  db_root_password:
    file: $PWD/docker-data/postgres/db_root_password.txt
networks:
  app_network:
    name: ${APP_NETWORK_NAME:-app_network}
    driver: bridge
