services:
  db:
    image: ${POSTGRES_IMAGE}:${POSTGRES_VERSION}
    container_name: ${POSTGRES_CONTAINER_NAME}
    command: -c config_file=/etc/postgresql.conf
    restart: always
    healthcheck:
      #test: ["CMD-SHELL", "pg_isready -U $${APP_POSTGRES_USER}"]
      test: pg_isready
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      #POSTGRES_PASSWORD_FILE: /run/secrets/db_root_password # openssl rand -base64 20 | sudo docker secret create db_root_password -
      POSTGRES_DB: ${APP_DATABASE_NAME}
      POSTGRES_USER: ${APP_POSTGRES_USER}
      POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD}
      TZ: ${APP_TIMEZONE}
    secrets:
      - db_root_password
    ports:
      - ${POSTGRES_PORT}:5432
    expose:
      - 5432
    volumes:
      - ${POSTGRESDATA_PATH}:/var/lib/postgresql/data
      - $PWD/services/postgres/conf/postgresql.conf:/etc/postgresql.conf
      #- $PWD/docker-data/postgres/logs:/tmp/logs
    networks:
      - ${APP_NETWORK_NAME}
  dbadmin:
    extends:
      file: $PWD/services/adminer/docker-compose.yml
      service: dbadmin
    depends_on:
      - db
secrets:
  db_root_password:
    file: $PWD/docker-data/postgres/db_root_password.txt
networks:
  app_network:
    name: ${APP_NETWORK_NAME}
    driver: bridge
