# Multi services entry point
#
# To check the running services run the command:
# docker ps | grep app_
# or
# docker stats --no-stream | grep app_

# To check the stdout logs of a service run the command:
# docker logs -f <container_name>
#
# To check the health log of a service run the command:
# docker inspect -f '{{json .State.Health.Log}}' <container_name> | jq
#

services:
  app:
    extends:
      file: $PWD/services/php/docker-compose.yml
      service: app
    depends_on:
      - db
  web:
    extends:
      file: $PWD/services/$WEB_SERVER/docker-compose.yml
      service: web
    depends_on:
      - app
  db:
    extends:
      file: $PWD/services/$DATABASE/docker-compose.yml
      service: db
  dbadmin:
    extends:
      file: $PWD/services/$DATABASE/docker-compose.yml
      service: dbadmin
    depends_on:
      - db
  redis:
    extends:
      file: $PWD/services/redis/docker-compose.yml
      service: redis
  smtp:
    extends:
      file: $PWD/services/mailpit/docker-compose.yml
      service: smtp
volumes:
  cache:
    name: redis_cache
    driver: local
  app_volume:
    name: app_volume
    driver_opts:
      type: none
      o: bind
      device: $PWD/app
networks:
  app_network:
    name: ${APP_NETWORK_NAME}
    driver: bridge
    attachable: true
    enable_ipv4: true
    enable_ipv6: false
secrets:
  db_root_password:
    file: $PWD/docker-data/$DATABASE/db_root_password.txt
